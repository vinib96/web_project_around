!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t,n){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:String(n)}var r=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._link=t.link,this._name=t.name,this._cardSelector=n,this._handleClick=r}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector("#cards").content.querySelector(".elements__cards").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._like(),this._remove(),this._element.querySelector(".elements__card-image").src=this._link,this._element.querySelector(".elements__text").alt=this._name,this._element.querySelector(".elements__text").textContent=this._name,this._element}},{key:"_like",value:function(){var e=this._element.querySelector(".elements__like-button");e.addEventListener("click",(function(){e.classList.toggle("elements__like-button_click")}))}},{key:"_remove",value:function(){var e=this._element.querySelector(".elements__trash");e.addEventListener("click",(function(){e.closest(".elements__cards").remove()}))}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".elements__card-image").addEventListener("click",(function(){e._handleClick({link:e._link,name:e._name})}))}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,u(r.key),r)}}function u(e){var t=function(e,t){if("object"!=o(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==o(t)?t:String(t)}var c=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),n.textContent=t,n.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add("text-color"),e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){console.log(this._hasInvalidInput(e)),this._hasInvalidInput(e)?t.classList.add(this._config.inactiveButtonClass):t.classList.remove(this._config.inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this,t=this._formElement.querySelector(this._config.submitButtonSelector),n=Array.from(this._formElement.querySelectorAll(this._config.inputSelector));this._toggleButtonState(n,t),n.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(r),e._toggleButtonState(n,t)}))}))}},{key:"enableValidation",value:function(){var e=this;Array.from(document.querySelectorAll(this._config.formSelector)).forEach((function(t){t.addEventListener("submit",(function(e){e.preventDefault()})),Array.from(e._formElement.querySelectorAll(".popup__formset")).forEach((function(t){e._setEventListeners(t)}))}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),l=document.querySelector(".popup_add-cards"),a=new c({formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},document.querySelector(".popup_profile"));function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,f(r.key),r)}}function f(e){var t=function(e,t){if("object"!=s(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==s(t)?t:String(t)}new c({formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},l).enableValidation(),a.enableValidation();var y=function(){function e(t){var n,r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,o=function(e){"Escape"===e.key&&i.close()},(r=f(r="_handleEscClose"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this._popupSelector=t,this.close=this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup__opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupSelector.classList.remove("popup__opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){this._popupSelector.querySelector(".popup__close-button").addEventListener("click",this.close),this._popupSelector.addEventListener("click",(function(e){e.target.classList.remove("popup__opened")}))}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,b(r.key),r)}}function b(e){var t=function(e,t){if("object"!=m(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==m(t)?t:String(t)}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function d(e,t){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},d(e,t)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,e)}return t=u,(n=[{key:"open",value:function(e,t){this._popupSelector.querySelector(".popup__image-large").src=e,this._popupSelector.querySelector(".popup__image-large").alt=t,this._popupSelector.querySelector(".popup__text-sub").textContent=t,v(h(u.prototype),"open",this).call(this)}},{key:"close",value:function(){v(h(u.prototype),"close",this).call(this)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(y);function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,E(r.key),r)}}function E(e){var t=function(e,t){if("object"!=g(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==g(t)?t:String(t)}var k=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._class=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._class.append(e)}},{key:"clear",value:function(){this._class.innerHTML=""}},{key:"renderItems",value:function(){var e=this;this.clear(),this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,P(r.key),r)}}function P(e){var t=function(e,t){if("object"!=j(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==j(t)?t:String(t)}var q=function(){function e(t){var n=t.nameSelector,r=t.aboutSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._aboutElement=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}},{key:"setUserInfo",value:function(e,t){this._nameElement.textContent=e,this._aboutElement.textContent=t}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,I(r.key),r)}}function I(e){var t=function(e,t){if("object"!=L(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==L(t)?t:String(t)}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},T.apply(this,arguments)}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._handleFormSubmit=r,t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._popupSelector.querySelectorAll(".popup__input"),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"close",value:function(){T(x(u.prototype),"close",this).call(this),this._popupSelector.querySelector(".popup__form").reset()}},{key:"setEventListeners",value:function(){var e=this;T(x(u.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(y),V=document.querySelector(".profile__edit-button"),A=document.querySelector(".profile__add-button"),z=document.querySelector(".popup_profile"),D=document.querySelector(".popup_add-cards"),F=(z.querySelector(".popup__close-button"),D.querySelector(".popup__close-add"),document.querySelector(".profile__name"),document.querySelector(".profile__about"),document.querySelector(".popup__input_type_name")),U=document.querySelector(".popup__input_type_about"),M=(document.querySelector(".popup__form_profile"),document.querySelector(".popup_full")),N=document.querySelector(".elements__container"),H=(document.querySelector(".popup__container"),document.querySelector("#cards-form"),document.querySelector("#add-card"),document.querySelector(".profile__input"),document.querySelector(".elements__card-image"),new S(M));H.setEventListeners();var Y=new k({items:[{name:"Vale de Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg"},{name:"Lago Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg"},{name:"Montanhas Carecas",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg"},{name:"Parque Nacional da Vanoise ",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg"}],renderer:function(e){var t=new r(e,"#cards",(function(){H.open(e.link,e.name)})).generateCard();Y.addItem(t)}},N);Y.renderItems();var G=new q({nameSelector:".profile__name",aboutSelector:".profile__about"}),J=new B({popupSelector:z,handleFormSubmit:function(e){var t=e.name,n=e.about;G.setUserInfo(t,n)}});J.setEventListeners(),V.addEventListener("click",(function(){var e=G.getUserInfo(),t=e.name,n=e.about;F.value=t,U.value=n,J.open()}));var K=new B({popupSelector:D,handleFormSubmit:function(){var e={name:document.querySelector(".popup__input_type_title").value,link:document.querySelector(".popup__input_type_image").value},t=new r(e,"#cards",(function(){H.open(e.link,e.name)})).generateCard();document.querySelector(".elements__container").prepend(t)}});K.setEventListeners(),A.addEventListener("click",(function(){K.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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amVjdF9hcm91bmQvLi9zcmMvc2NyaXB0cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9zY3JpcHRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL3NjcmlwdHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL3NjcmlwdHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL3NjcmlwdHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvc2NyaXB0cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvc2NyaXB0cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9zY3JpcHRzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSwgY2FyZFNlbGVjdG9yLCBoYW5kbGVDYXJkQ2xpY2spIHtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgdGhpcy5faGFuZGxlQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgfVxyXG5cclxuICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI2NhcmRzXCIpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudHNfX2NhcmRzXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fbGlrZSgpO1xyXG4gICAgdGhpcy5fcmVtb3ZlKCk7XHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudHNfX2NhcmQtaW1hZ2VcIikuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fdGV4dFwiKS5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX190ZXh0XCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9XHJcblxyXG4gIF9saWtlKCkge1xyXG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fbGlrZS1idXR0b25cIik7XHJcblxyXG4gICAgbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJlbGVtZW50c19fbGlrZS1idXR0b25fY2xpY2tcIik7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF9yZW1vdmUoKSB7XHJcbiAgICBjb25zdCB0cmFzaEJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fdHJhc2hcIik7XHJcbiAgICB0cmFzaEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICBjb25zdCBlbGVtZW50UmVtb3ZlID0gdHJhc2hCdXR0b24uY2xvc2VzdChcIi5lbGVtZW50c19fY2FyZHNcIik7XHJcbiAgICAgIGVsZW1lbnRSZW1vdmUucmVtb3ZlKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudHNfX2NhcmQtaW1hZ2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2xpY2soe1xyXG4gICAgICAgICAgbGluazogdGhpcy5fbGluayxcclxuICAgICAgICAgIG5hbWU6IHRoaXMuX25hbWUsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xyXG4gIH1cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxyXG4gICAgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXHJcbiAgICApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ0ZXh0LWNvbG9yXCIpO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gIH1cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcbiAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcclxuICAgIHJldHVybiBpbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpIHtcclxuICAgIGNvbnNvbGUubG9nKHRoaXMuX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpKTtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xyXG4gICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIGNvbnN0IGJ1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICB0aGlzLl9jb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3JcclxuICAgICk7XHJcbiAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2NvbmZpZy5pbnB1dFNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XHJcbiAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgY29uc3QgZm9ybUxpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2NvbmZpZy5mb3JtU2VsZWN0b3IpXHJcbiAgICApO1xyXG4gICAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcclxuICAgICAgZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgY29uc3QgZmllbGRzZXRMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19mb3Jtc2V0XCIpXHJcbiAgICAgICk7XHJcblxyXG4gICAgICBmaWVsZHNldExpc3QuZm9yRWFjaCgoZmllbGRzZXQpID0+IHtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycyhmaWVsZHNldCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbmNvbnN0IGFkZENhcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9hZGQtY2FyZHNcIik7XHJcbmNvbnN0IHBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9wcm9maWxlXCIpO1xyXG5cclxuY29uc3QgcHJvZmlsZVZhbGlkID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAge1xyXG4gICAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxyXG4gICAgaW5wdXRTZWxlY3RvcjogXCIucG9wdXBfX2lucHV0XCIsXHJcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX3N1Ym1pdC1idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCIsXHJcbiAgfSxcclxuICBwb3B1cFxyXG4pO1xyXG5cclxuY29uc3QgYWRkVmFsaWQgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICB7XHJcbiAgICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fc3VibWl0LWJ1dHRvblwiLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnV0dG9uX2Rpc2FibGVkXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICAgIGVycm9yQ2xhc3M6IFwicG9wdXBfX2Vycm9yX3Zpc2libGVcIixcclxuICB9LFxyXG4gIGFkZENhcmRzXHJcbik7XHJcblxyXG5hZGRWYWxpZC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbnByb2ZpbGVWYWxpZC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yID0gcG9wdXBTZWxlY3RvcjtcclxuICAgIHRoaXMuY2xvc2UgPSB0aGlzLmNsb3NlLmJpbmQodGhpcyk7XHJcbiAgfVxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9fb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX19vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG4gIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcclxuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3JcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlLWJ1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY2xvc2UpO1xyXG4gICAgZnVuY3Rpb24gb25DbGljayhldnQpIHtcclxuICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfX29wZW5lZFwiKTtcclxuICAgIH1cclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2spO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgb3BlbihsaW5rLCBuYW1lKSB7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlLWxhcmdlXCIpLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlLWxhcmdlXCIpLmFsdCA9IG5hbWU7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3RleHQtc3ViXCIpLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY2FyZFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY2xhc3MgPSBjYXJkU2VsZWN0b3I7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NsYXNzLmFwcGVuZChlbGVtZW50KTtcclxuICB9XHJcblxyXG4gIGNsZWFyKCkge1xyXG4gICAgdGhpcy5fY2xhc3MuaW5uZXJIVE1MID0gXCJcIjtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5jbGVhcigpO1xyXG5cclxuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IoeyBuYW1lU2VsZWN0b3IsIGFib3V0U2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fbmFtZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWVTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9hYm91dEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGFib3V0U2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0RWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgfVxyXG4gIHNldFVzZXJJbmZvKG5hbWUsIGFib3V0KSB7XHJcbiAgICB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICB0aGlzLl9hYm91dEVsZW1lbnQudGV4dENvbnRlbnQgPSBhYm91dDtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCB9KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gIH1cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2lucHV0XCIpO1xyXG5cclxuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgdGhpcy5fZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1WYWx1ZXM7XHJcbiAgfVxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKS5yZXNldCgpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3Rvci5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY29uc3Qgb3BlbkZvcm1CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3Qgb3BlbkFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9wcm9maWxlXCIpO1xyXG5leHBvcnQgY29uc3QgYWRkQ2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX2FkZC1jYXJkc1wiKTtcclxuZXhwb3J0IGNvbnN0IGNsb3NlQnV0dG9uID0gcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2UtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgY2xvc2VBZGQgPSBhZGRDYXJkcy5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jbG9zZS1hZGRcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWJvdXRcIik7XHJcbmV4cG9ydCBjb25zdCBpbnB1dE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90eXBlX25hbWVcIik7XHJcbmV4cG9ydCBjb25zdCBpbnB1dEFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdHlwZV9hYm91dFwiKTtcclxuZXhwb3J0IGNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtX3Byb2ZpbGVcIik7XHJcbmV4cG9ydCBjb25zdCBmdWxsSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX2Z1bGxcIik7XHJcbmV4cG9ydCBjb25zdCBjYXJkTGlzdFNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fY29udGFpbmVyXCIpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBMaXN0U2VsZWN0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jb250YWluZXJcIik7XHJcbmV4cG9ydCBjb25zdCBjYXJkc0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmRzLWZvcm1cIik7XHJcbmV4cG9ydCBjb25zdCBhZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZC1jYXJkXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvSW5wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IGltZ0NsaWNrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fY2FyZC1pbWFnZVwiKTtcclxuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICB7XHJcbiAgICBuYW1lOiBcIlZhbGUgZGUgWW9zZW1pdGVcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS93ZWItY29kZS9tb3ZlZF95b3NlbWl0ZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGFnbyBMb3Vpc2VcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS93ZWItY29kZS9tb3ZlZF9sYWtlLWxvdWlzZS5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTW9udGFuaGFzIENhcmVjYXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS93ZWItY29kZS9tb3ZlZF9iYWxkLW1vdW50YWlucy5qcGdcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3dlYi1jb2RlL21vdmVkX2xhdGVtYXIuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIlBhcnF1ZSBOYWNpb25hbCBkYSBWYW5vaXNlIFwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3dlYi1jb2RlL21vdmVkX3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG4vLyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3Byb2ZpbGVcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2spO1xyXG4vLyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX2Z1bGxcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2spO1xyXG4vLyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX2FkZC1jYXJkc1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljayk7XHJcblxyXG4vLyBvcGVuRm9ybUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4vLyAgIHBvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9fb3BlbmVkXCIpO1xyXG4vLyAgIGlucHV0TmFtZS52YWx1ZSA9IHByb2ZpbGVOYW1lLnRleHRDb250ZW50O1xyXG4vLyAgIGlucHV0QWJvdXQudmFsdWUgPSBwcm9maWxlQWJvdXQudGV4dENvbnRlbnQ7XHJcbi8vIH0pO1xyXG5cclxuLy8gb3BlbkFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4vLyAgIGFkZENhcmRzLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9fb3BlbmVkXCIpO1xyXG4vLyB9KTtcclxuXHJcbi8vIGNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbi8vICAgcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX19vcGVuZWRcIik7XHJcbi8vIH0pO1xyXG5cclxuLy8gY2xvc2VBZGQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuLy8gICBhZGRDYXJkcy5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfX29wZW5lZFwiKTtcclxuLy8gfSk7XHJcblxyXG4vLyBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4vLyAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gaW5wdXROYW1lLnZhbHVlO1xyXG4vLyAgIHByb2ZpbGVBYm91dC50ZXh0Q29udGVudCA9IGlucHV0QWJvdXQudmFsdWU7XHJcbi8vICAgcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX19vcGVuZWRcIik7XHJcbi8vIH0pO1xyXG5cclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZnVuY3Rpb24gKGV2dCkge1xyXG4vLyAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbi8vICAgICBwb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfX29wZW5lZFwiKTtcclxuLy8gICAgIGZ1bGxJbWFnZS5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfX29wZW5lZFwiKTtcclxuLy8gICAgIGFkZENhcmRzLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9fb3BlbmVkXCIpO1xyXG4vLyAgIH1cclxuLy8gfSk7XHJcblxyXG4vLyBmdW5jdGlvbiBvbkNsaWNrKGV2dCkge1xyXG4vLyAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX19vcGVuZWRcIik7XHJcbi8vIH1cclxuIiwiaW1wb3J0IFwiLi4vc3JjL3N0eWxlcy9pbmRleC5jc3NcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL3NyYy9zY3JpcHRzL0NhcmQuanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL3NyYy9zY3JpcHRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9zcmMvc2NyaXB0cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4uL3NyYy9zY3JpcHRzL1BvcHVwLmpzXCI7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9zcmMvc2NyaXB0cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vc3JjL3NjcmlwdHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL3NyYy9zY3JpcHRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IHtcclxuICBwb3B1cCxcclxuICBhZGRDYXJkcyxcclxuICBjYXJkTGlzdFNlbGVjdG9yLFxyXG4gIG9wZW5BZGRCdXR0b24sXHJcbiAgb3BlbkZvcm1CdXR0b24sXHJcbiAgZnVsbEltYWdlLFxyXG4gIGluaXRpYWxDYXJkcyxcclxuICBpbnB1dEFib3V0LFxyXG4gIGlucHV0TmFtZSxcclxufSBmcm9tIFwiLi4vc3JjL3NjcmlwdHMvY29uc3RhbnRzLmpzXCI7XHJcblxyXG5jb25zdCBwb3B1cFdpdGhJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShmdWxsSW1hZ2UpO1xyXG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgZGVmYXVsdENhcmRMaXN0ID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xyXG4gICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoaXRlbSwgXCIjY2FyZHNcIiwgKCkgPT4ge1xyXG4gICAgICAgIHBvcHVwV2l0aEltYWdlLm9wZW4oaXRlbS5saW5rLCBpdGVtLm5hbWUpO1xyXG4gICAgICB9KTtcclxuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG4gICAgICBkZWZhdWx0Q2FyZExpc3QuYWRkSXRlbShjYXJkRWxlbWVudCk7XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgY2FyZExpc3RTZWxlY3RvclxyXG4pO1xyXG5kZWZhdWx0Q2FyZExpc3QucmVuZGVySXRlbXMoKTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICBuYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX25hbWVcIixcclxuICBhYm91dFNlbGVjdG9yOiBcIi5wcm9maWxlX19hYm91dFwiLFxyXG59KTtcclxuY29uc3QgZm9ybVByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogcG9wdXAsXHJcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKHsgbmFtZSwgYWJvdXQgfSkgPT4ge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8obmFtZSwgYWJvdXQpO1xyXG4gIH0sXHJcbn0pO1xyXG5mb3JtUHJvZmlsZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5vcGVuRm9ybUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNvbnN0IHsgbmFtZSwgYWJvdXQgfSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgaW5wdXROYW1lLnZhbHVlID0gbmFtZTtcclxuICBpbnB1dEFib3V0LnZhbHVlID0gYWJvdXQ7XHJcbiAgZm9ybVByb2ZpbGUub3BlbigpO1xyXG59KTtcclxuXHJcbmNvbnN0IGZvcm1BZGRDYXJkID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xyXG4gIHBvcHVwU2VsZWN0b3I6IGFkZENhcmRzLFxyXG4gIGhhbmRsZUZvcm1TdWJtaXQ6ICgpID0+IHtcclxuICAgIGNvbnN0IGNhcmREYXRhID0ge1xyXG4gICAgICBuYW1lOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90eXBlX3RpdGxlXCIpLnZhbHVlLFxyXG4gICAgICBsaW5rOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90eXBlX2ltYWdlXCIpLnZhbHVlLFxyXG4gICAgfTtcclxuICAgIGNvbnN0IGNhcmROZXcgPSBuZXcgQ2FyZChjYXJkRGF0YSwgXCIjY2FyZHNcIiwgKCkgPT4ge1xyXG4gICAgICBwb3B1cFdpdGhJbWFnZS5vcGVuKGNhcmREYXRhLmxpbmssIGNhcmREYXRhLm5hbWUpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmROZXcuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19jb250YWluZXJcIikucHJlcGVuZChjYXJkRWxlbWVudCk7XHJcbiAgfSxcclxufSk7XHJcblxyXG5mb3JtQWRkQ2FyZC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5vcGVuQWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgZm9ybUFkZENhcmQub3BlbigpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIkNhcmQiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9saW5rIiwibGluayIsIl9uYW1lIiwibmFtZSIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlQ2xpY2siLCJrZXkiLCJ2YWx1ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9saWtlIiwiX3JlbW92ZSIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwibGlrZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJ0cmFzaEJ1dHRvbiIsImNsb3Nlc3QiLCJyZW1vdmUiLCJfdGhpcyIsIkZvcm1WYWxpZGF0b3IiLCJjb25maWciLCJmb3JtRWxlbWVudCIsIl9jb25maWciLCJfZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJjb25jYXQiLCJpZCIsImFkZCIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJpbnB1dExpc3QiLCJzb21lIiwiYnV0dG9uRWxlbWVudCIsImNvbnNvbGUiLCJsb2ciLCJfaGFzSW52YWxpZElucHV0IiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl90aGlzMiIsImZvcm1TZWxlY3RvciIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiZmllbGRzZXQiLCJhZGRDYXJkcyIsInByb2ZpbGVWYWxpZCIsImVuYWJsZVZhbGlkYXRpb24iLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJjbG9zZSIsIl9wb3B1cFNlbGVjdG9yIiwiYmluZCIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0YXJnZXQiLCJQb3B1cFdpdGhJbWFnZSIsIl9Qb3B1cCIsIl9pbmhlcml0cyIsIl9zdXBlciIsImNhbGwiLCJfZ2V0IiwiX2dldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiU2VjdGlvbiIsIl9yZWYiLCJpdGVtcyIsInJlbmRlcmVyIiwiX3JlbmRlcmVkSXRlbXMiLCJfcmVuZGVyZXIiLCJfY2xhc3MiLCJlbGVtZW50IiwiYXBwZW5kIiwiaW5uZXJIVE1MIiwiY2xlYXIiLCJpdGVtIiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJhYm91dFNlbGVjdG9yIiwiX25hbWVFbGVtZW50IiwiX2Fib3V0RWxlbWVudCIsImFib3V0IiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9pbnB1dExpc3QiLCJfZm9ybVZhbHVlcyIsImlucHV0IiwicmVzZXQiLCJfdGhpczMiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJvcGVuRm9ybUJ1dHRvbiIsIm9wZW5BZGRCdXR0b24iLCJwb3B1cCIsImlucHV0TmFtZSIsImlucHV0QWJvdXQiLCJmdWxsSW1hZ2UiLCJjYXJkTGlzdFNlbGVjdG9yIiwicG9wdXBXaXRoSW1hZ2UiLCJzZXRFdmVudExpc3RlbmVycyIsImRlZmF1bHRDYXJkTGlzdCIsImNhcmRFbGVtZW50Iiwib3BlbiIsImdlbmVyYXRlQ2FyZCIsImFkZEl0ZW0iLCJyZW5kZXJJdGVtcyIsInVzZXJJbmZvIiwiZm9ybVByb2ZpbGUiLCJzZXRVc2VySW5mbyIsIl91c2VySW5mbyRnZXRVc2VySW5mbyIsImdldFVzZXJJbmZvIiwiZm9ybUFkZENhcmQiLCJjYXJkRGF0YSIsInByZXBlbmQiXSwic291cmNlUm9vdCI6IiJ9